/*
 * Thingdust app API
 *
 * API to access and configure the Thingdust app
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiservices

import (
	"context"
	"thingdust/eliona"
	"net/http"
	"thingdust/apiserver"
)

// CustomizationApiService is a service that implements the logic for the CustomizationApiServicer
// This service should implement the business logic for every endpoint for the CustomizationApi API.
// Include any external packages or services that will be required by this service.
type CustomizationApiService struct {
}

// NewCustomizationApiService creates a default api service
func NewCustomizationApiService() apiserver.CustomizationApiServicer {
	return &CustomizationApiService{}
}

// GetDashboardTemplateByName - Get a full dashboard template
func (s *CustomizationApiService) GetDashboardTemplateByName(ctx context.Context, dashboardTemplateName string, projectId string) (apiserver.ImplResponse, error) {
	if dashboardTemplateName == "Thingdust" {
		dashboard, err := eliona.ThingdustDashboard(projectId)
		if err != nil {
			return apiserver.ImplResponse{Code: http.StatusInternalServerError}, err
		}
		return apiserver.Response(http.StatusOK, dashboard), nil
	} else {
		return apiserver.ImplResponse{Code: http.StatusNotFound}, nil
	}
}

// GetDashboardTemplateNames - List available dashboard templates
func (s *CustomizationApiService) GetDashboardTemplateNames(ctx context.Context) (apiserver.ImplResponse, error) {
	return apiserver.Response(http.StatusOK, []string{"Thingdust"}), nil
}
